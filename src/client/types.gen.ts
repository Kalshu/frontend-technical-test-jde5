// This file is auto-generated by @hey-api/openapi-ts

export type Comment = {
    id: CommentId;
    authorId: UserId;
    memeId: MemeId;
    content?: string | null;
    createdAt: string;
};

export type CommentCreationRequestBody = {
    content: string;
};

export type CommentId = string;

export type CommentList = {
    results?: Array<Comment> | null;
    total: number;
    pageSize: number;
};

export type LoginRequestPayload = {
    username?: string | null;
    password?: string | null;
};

export type LoginResponse = {
    jwt?: string | null;
};

export type Meme = {
    id: MemeId;
    authorId: UserId;
    pictureUrl?: string | null;
    description?: string | null;
    texts?: Array<MemeText> | null;
    commentsCount: number;
    createdAt: string;
};

export type MemeId = string;

export type MemeList = {
    results?: Array<Meme> | null;
    total: number;
    pageSize: number;
};

export type MemeText = {
    content?: string | null;
    x: number;
    y: number;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    '[key: string]': (unknown | string | number) | undefined;
};

export type User = {
    id: UserId;
    username?: string | null;
    pictureUrl?: string | null;
};

export type UserId = string;

export type PostApiAuthenticationLoginData = {
    body?: LoginRequestPayload;
};

export type PostApiAuthenticationLoginResponse = LoginResponse;

export type PostApiAuthenticationLoginError = unknown;

export type ApiCommentPostData = {
    body: CommentCreationRequestBody;
    path: {
        memeId: string;
    };
};

export type ApiCommentPostResponse = Meme;

export type ApiCommentPostError = ProblemDetails;

export type ApiCommentGetListData = {
    path: {
        memeId: string;
    };
    query: {
        page: number;
    };
};

export type ApiCommentGetListResponse = CommentList;

export type ApiCommentGetListError = ProblemDetails;

export type ApiMemePostData = {
    body?: {
        Picture: (Blob | File);
        Description: string;
        Texts: Array<MemeText>;
    };
};

export type ApiMemePostResponse = Meme;

export type ApiMemePostError = ProblemDetails;

export type ApiMemeGetListData = {
    query?: {
        Page?: number;
    };
};

export type ApiMemeGetListResponse = MemeList;

export type ApiMemeGetListError = ProblemDetails;

export type GetApiMemesByMemeIdPictureData = {
    path: {
        memeId: string;
    };
};

export type GetApiMemesByMemeIdPictureResponse = unknown;

export type GetApiMemesByMemeIdPictureError = unknown;

export type GetApiUsersByUserIdData = {
    path: {
        userId: string;
    };
};

export type GetApiUsersByUserIdResponse = User;

export type GetApiUsersByUserIdError = ProblemDetails;

export type ApiUserGetData = {
    query: {
        ids: Array<(string)>;
    };
};

export type ApiUserGetResponse = Array<User>;

export type ApiUserGetError = ProblemDetails;

export type $OpenApiTs = {
    '/api/authentication/login': {
        post: {
            req: PostApiAuthenticationLoginData;
            res: {
                /**
                 * Success
                 */
                '200': LoginResponse;
            };
        };
    };
    '/api/memes/{memeId}/comments': {
        post: {
            req: ApiCommentPostData;
            res: {
                /**
                 * Success
                 */
                '200': Meme;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
        get: {
            req: ApiCommentGetListData;
            res: {
                /**
                 * Success
                 */
                '200': CommentList;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
    };
    '/api/memes': {
        post: {
            req: ApiMemePostData;
            res: {
                /**
                 * Success
                 */
                '200': Meme;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
        get: {
            req: ApiMemeGetListData;
            res: {
                /**
                 * Success
                 */
                '200': MemeList;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
    };
    '/api/memes/{memeId}/picture': {
        get: {
            req: GetApiMemesByMemeIdPictureData;
            res: {
                /**
                 * Success
                 */
                '200': unknown;
            };
        };
    };
    '/api/users/{userId}': {
        get: {
            req: GetApiUsersByUserIdData;
            res: {
                /**
                 * Success
                 */
                '200': User;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
    };
    '/api/users': {
        get: {
            req: ApiUserGetData;
            res: {
                /**
                 * Success
                 */
                '200': Array<User>;
                /**
                 * Unauthorized
                 */
                '401': ProblemDetails;
                /**
                 * Forbidden
                 */
                '403': ProblemDetails;
                /**
                 * Not Found
                 */
                '404': ProblemDetails;
            };
        };
    };
};